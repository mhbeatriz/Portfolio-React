{"ast":null,"code":"import _slicedToArray from\"/Users/bitri/Documents/ADALAB/PORTFOLIO/Rick-and-Morty-buscador/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Route,Switch}from\"react-router-dom\";import getDataFromAPI from\"../services/api\";import ls from\"../services/localStorage\";import CharacterList from\"./CharacterList\";import Filters from\"./Filters\";import CharacterDetail from\"./CharacterDetail\";import Header from\"./Header\";import Footer from\"./Footer\";import\"../stylesheets/App.scss\";import CharacterNotFound from\"./CharacterNotFound\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(ls.get(\"character\",[])),_useState2=_slicedToArray(_useState,2),characters=_useState2[0],setCharacters=_useState2[1];var _useState3=useState(ls.get(\"filterName\",\"\")),_useState4=_slicedToArray(_useState3,2),filterName=_useState4[0],setFilterName=_useState4[1];var _useState5=useState(ls.get(\"filterSpecies\",\"\")),_useState6=_slicedToArray(_useState5,2),filterSpecies=_useState6[0],setFilterSpecies=_useState6[1];//Llamada a la Api y ordenarla alfabéticamente\nuseEffect(function(){if(characters.length===0){getDataFromAPI().then(function(data){var orderAlpha=data.sort(function(a,b){return a.name>b.name?1:a.name<b.name?-1:0;});setCharacters(data);});}},[]);//LocalStorage\nuseEffect(function(){ls.set(\"characters\",characters);ls.set(\"filterName\",filterName);ls.set(\"filterSpecies\",filterSpecies);},[filterName,filterSpecies,characters]);//Filtrar por nombre y especie\nfunction handleFilter(data){if(data.key===\"name\"){return setFilterName(data.value);}else if(data.key===\"species\"){return setFilterSpecies(data.value);}}var FilterCharacters=characters.filter(function(character){return character.name.toLowerCase().includes(filterName.toLowerCase());}).filter(function(character){if(filterSpecies===\"\"){return true;}else{return character.species.toLowerCase().includes(filterSpecies.toLowerCase());}});//Función para llamar al detalle de cada personaje\nvar renderCharacterDetail=function renderCharacterDetail(props){var characterId=props.match.params.characterId;var foundCharacter=characters.find(function(character){return character.id===parseInt(characterId);});console.log(foundCharacter);if(foundCharacter!==undefined){return/*#__PURE__*/_jsx(CharacterDetail,{character:foundCharacter});}else{return/*#__PURE__*/_jsx(CharacterNotFound,{});}};return/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Filters,{handleFilter:handleFilter,filterName:filterName,filterSpecies:filterSpecies}),/*#__PURE__*/_jsx(CharacterList,{characters:FilterCharacters})]}),/*#__PURE__*/_jsx(Route,{path:\"/character/:characterId\",render:renderCharacterDetail}),/*#__PURE__*/_jsx(Footer,{})]})});};export default App;","map":{"version":3,"sources":["/Users/bitri/Documents/ADALAB/PORTFOLIO/Rick-and-Morty-buscador/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","getDataFromAPI","ls","CharacterList","Filters","CharacterDetail","Header","Footer","CharacterNotFound","App","get","characters","setCharacters","filterName","setFilterName","filterSpecies","setFilterSpecies","length","then","data","orderAlpha","sort","a","b","name","set","handleFilter","key","value","FilterCharacters","filter","character","toLowerCase","includes","species","renderCharacterDetail","props","characterId","match","params","foundCharacter","find","id","parseInt","console","log","undefined"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,iBAA3B,CACA,MAAOC,CAAAA,EAAP,KAAe,0BAAf,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAO,yBAAP,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAAoCZ,QAAQ,CAACK,EAAE,CAACQ,GAAH,CAAO,WAAP,CAAoB,EAApB,CAAD,CAA5C,wCAAOC,UAAP,eAAmBC,aAAnB,eACA,eAAoCf,QAAQ,CAACK,EAAE,CAACQ,GAAH,CAAO,YAAP,CAAqB,EAArB,CAAD,CAA5C,yCAAOG,UAAP,eAAmBC,aAAnB,eACA,eAA0CjB,QAAQ,CAChDK,EAAE,CAACQ,GAAH,CAAO,eAAP,CAAwB,EAAxB,CADgD,CAAlD,yCAAOK,aAAP,eAAsBC,gBAAtB,eAIA;AACAlB,SAAS,CAAC,UAAM,CACd,GAAIa,UAAU,CAACM,MAAX,GAAsB,CAA1B,CAA6B,CAC3BhB,cAAc,GAAGiB,IAAjB,CAAsB,SAACC,IAAD,CAAU,CAC9B,GAAMC,CAAAA,UAAU,CAAGD,IAAI,CAACE,IAAL,CAAU,SAACC,CAAD,CAAIC,CAAJ,QAC3BD,CAAAA,CAAC,CAACE,IAAF,CAASD,CAAC,CAACC,IAAX,CAAkB,CAAlB,CAAsBF,CAAC,CAACE,IAAF,CAASD,CAAC,CAACC,IAAX,CAAkB,CAAC,CAAnB,CAAuB,CADlB,EAAV,CAAnB,CAGAZ,aAAa,CAACO,IAAD,CAAb,CACD,CALD,EAMD,CACF,CATQ,CASN,EATM,CAAT,CAWA;AACArB,SAAS,CAAC,UAAM,CACdI,EAAE,CAACuB,GAAH,CAAO,YAAP,CAAqBd,UAArB,EACAT,EAAE,CAACuB,GAAH,CAAO,YAAP,CAAqBZ,UAArB,EACAX,EAAE,CAACuB,GAAH,CAAO,eAAP,CAAwBV,aAAxB,EACD,CAJQ,CAIN,CAACF,UAAD,CAAaE,aAAb,CAA4BJ,UAA5B,CAJM,CAAT,CAMA;AACA,QAASe,CAAAA,YAAT,CAAsBP,IAAtB,CAA4B,CAC1B,GAAIA,IAAI,CAACQ,GAAL,GAAa,MAAjB,CAAyB,CACvB,MAAOb,CAAAA,aAAa,CAACK,IAAI,CAACS,KAAN,CAApB,CACD,CAFD,IAEO,IAAIT,IAAI,CAACQ,GAAL,GAAa,SAAjB,CAA4B,CACjC,MAAOX,CAAAA,gBAAgB,CAACG,IAAI,CAACS,KAAN,CAAvB,CACD,CACF,CAED,GAAMC,CAAAA,gBAAgB,CAAGlB,UAAU,CAChCmB,MADsB,CACf,SAACC,SAAD,CAAe,CACrB,MAAOA,CAAAA,SAAS,CAACP,IAAV,CAAeQ,WAAf,GAA6BC,QAA7B,CAAsCpB,UAAU,CAACmB,WAAX,EAAtC,CAAP,CACD,CAHsB,EAItBF,MAJsB,CAIf,SAACC,SAAD,CAAe,CACrB,GAAIhB,aAAa,GAAK,EAAtB,CAA0B,CACxB,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAOgB,CAAAA,SAAS,CAACG,OAAV,CACJF,WADI,GAEJC,QAFI,CAEKlB,aAAa,CAACiB,WAAd,EAFL,CAAP,CAGD,CACF,CAZsB,CAAzB,CAcA;AACA,GAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACvC,GAAMC,CAAAA,WAAW,CAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,WAAvC,CACA,GAAMG,CAAAA,cAAc,CAAG7B,UAAU,CAAC8B,IAAX,CAAgB,SAACV,SAAD,CAAe,CACpD,MAAOA,CAAAA,SAAS,CAACW,EAAV,GAAiBC,QAAQ,CAACN,WAAD,CAAhC,CACD,CAFsB,CAAvB,CAGAO,OAAO,CAACC,GAAR,CAAYL,cAAZ,EACA,GAAIA,cAAc,GAAKM,SAAvB,CAAkC,CAChC,mBAAO,KAAC,eAAD,EAAiB,SAAS,CAAEN,cAA5B,EAAP,CACD,CAFD,IAEO,CACL,mBAAO,KAAC,iBAAD,IAAP,CACD,CACF,CAXD,CAYA,mBACE,KAAC,MAAD,wBACE,aAAK,SAAS,CAAC,WAAf,wBACE,MAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,wBACE,KAAC,MAAD,IADF,cAEE,KAAC,OAAD,EACE,YAAY,CAAEd,YADhB,CAEE,UAAU,CAAEb,UAFd,CAGE,aAAa,CAAEE,aAHjB,EAFF,cAOE,KAAC,aAAD,EAAe,UAAU,CAAEc,gBAA3B,EAPF,GADF,cAUE,KAAC,KAAD,EAAO,IAAI,CAAC,yBAAZ,CAAsC,MAAM,CAAEM,qBAA9C,EAVF,cAWE,KAAC,MAAD,IAXF,GADF,EADF,CAiBD,CA/ED,CAgFA,cAAe1B,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataFromAPI from \"../services/api\";\nimport ls from \"../services/localStorage\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport \"../stylesheets/App.scss\";\nimport CharacterNotFound from \"./CharacterNotFound\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState(ls.get(\"character\", []));\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecies, setFilterSpecies] = useState(\n    ls.get(\"filterSpecies\", \"\")\n  );\n\n  //Llamada a la Api y ordenarla alfabéticamente\n  useEffect(() => {\n    if (characters.length === 0) {\n      getDataFromAPI().then((data) => {\n        const orderAlpha = data.sort((a, b) =>\n          a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n        );\n        setCharacters(data);\n      });\n    }\n  }, []);\n\n  //LocalStorage\n  useEffect(() => {\n    ls.set(\"characters\", characters);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [filterName, filterSpecies, characters]);\n\n  //Filtrar por nombre y especie\n  function handleFilter(data) {\n    if (data.key === \"name\") {\n      return setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      return setFilterSpecies(data.value);\n    }\n  }\n\n  const FilterCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterSpecies === \"\") {\n        return true;\n      } else {\n        return character.species\n          .toLowerCase()\n          .includes(filterSpecies.toLowerCase());\n      }\n    });\n\n  //Función para llamar al detalle de cada personaje\n  const renderCharacterDetail = (props) => {\n    const characterId = props.match.params.characterId;\n    const foundCharacter = characters.find((character) => {\n      return character.id === parseInt(characterId);\n    });\n    console.log(foundCharacter);\n    if (foundCharacter !== undefined) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <CharacterNotFound />;\n    }\n  };\n  return (\n    <Switch>\n      <div className=\"container\">\n        <Route exact path=\"/\">\n          <Header />\n          <Filters\n            handleFilter={handleFilter}\n            filterName={filterName}\n            filterSpecies={filterSpecies}\n          />\n          <CharacterList characters={FilterCharacters} />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n        <Footer />\n      </div>\n    </Switch>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}